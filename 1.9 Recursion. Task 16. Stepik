#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

vector <int> v(11);
vector <int> value(11);
int sum = 0;

void IniteValues (int n){
	for (int j = 0; j <= n; j++){
		value[j] = j;
	}
}

void IniteBoard (int Start, int n){
	for (int i = 1; i <= n; i++){
		v[i] = 0;
	}
	v[1] = Start;
	IniteValues(n);
	value[Start] = 0;
}

bool CanPlaceQuin (int i, int value){
  for (int k = i - 1; k > 0; k--){
    if (abs(i - k) != abs(value - v[k]));
    else return false;
  }
return true;
}

void Step (int i, int n){
	if ((i <= 0) && (i > n)){
		cout << "If Branch" << endl;
		if (i > n){			//branch of succes
			v[0]++;		//Plus one to the amount of cases
			Step(--i, n);	//going back to find more cases
		}
		cout << "The End"; //This is the end (if i = 0)
	} else {				//branch of the investigment
		cout << "Else Branch " << v[0] << endl;
		int j = v[i];
		while (j < n){
			
		//for (int j = v[i]; j < n; j++){
			j++;
			if (value[j] != 0){
				if (CanPlaceQuin(i, value[j])){	//step forward
					value[v[i]] = v[i];	//saving current value in the 'i' colon
					v[i] = value[j];	//placing new (tested) value to the board
					value[j] = 0;	//deleting value that we placed above from the vecter of free values
					Step(++i, n);	//going to the next colon
				}
			}
		} 
		//step back
		value[v[i]] = v[i];	//saving current value in the 'i' colon to the vecter of free values
		v[i] = 0;		//deleting value in the 'i' colon
		Step(--i, n);	//goint to the preveous colon
		
	}
}

int main (){
  int n;
  int init = 0, output = 1;
  
  //INPUT
  cin >> n;

  
  //inite v[i]
  //inite value[j]

  IniteBoard(0, n);
  
  
  //PROCESSING
  //PlaceQuin(++point, n);
  Step(1, n);
  //(2, n);

  
  //OUTPUT
  cout << sum << endl;

  //output of v[i]
  output = 1;
  if (output == 1) {
    for (int i = 0; i <= n; i++){
      cout << v[i] << " ";
    }
    cout << endl;
  }
  //output of value[j]
  if (output == 1) {
    for (int j = 0; j <= n; j++){
      cout << value[j] << " ";
    }
  }  


return 0;
}
